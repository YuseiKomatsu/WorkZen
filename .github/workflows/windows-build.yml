name: Build Windows App

on:
  push:
    branches:
      - main
      - bugfix
      - new-feature
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Ensure clean working directory
      run: |
        git checkout .
        git clean -fdx
        
    - name: Install dependencies
      run: npm install
      
    - name: Build Electron app
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run build

    - name: Determine version bump
      if: github.ref == 'refs/heads/main'
      id: version-bump
      shell: bash
      run: |
        if [[ "${{ github.event.pull_request.head.ref }}" == bugfix* ]] || [[ "${{ github.event.head_commit.message }}" == *"fix"* ]]; then
          echo "::set-output name=version_type::patch"
        else
          echo "::set-output name=version_type::minor"
        fi

    - name: Configure Git
      if: github.ref == 'refs/heads/main'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

    - name: Commit changes
      if: github.ref == 'refs/heads/main'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git add .
        git commit -m "Automated version bump" || echo "No changes to commit"

    - name: Bump version and push tag
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Pull request: ${{ github.event.pull_request }}"
        npm version ${{ steps.version-bump.outputs.version_type }}
        git push --follow-tags origin main

    - name: Create GitHub Release
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version-bump.outputs.version_type }}
        name: Release ${{ steps.version-bump.outputs.version_type }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    # - name: Upload artifacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: windows-app
    #     path: dist/*.exe
    #     retention-days: 1  # 1日後にアーティファクトを自動削除
